buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('io.kokuwa.micronaut:micronaut-openapi-codegen:2.2.1')
    }
}

plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.4.1"
    id("org.openapi.generator") version "5.3.0"
}

version = "0.1"
group = "com.eduardo.msa"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    testAnnotationProcessor("io.micronaut:micronaut-inject-java")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.flyway:micronaut-flyway")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("javax.inject:javax.inject:1")
    implementation("com.google.code.findbugs:jsr305:3.0.2")
    implementation("io.reactivex.rxjava2:rxjava:2.2.21")
    compileOnly("org.projectlombok:lombok")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("mysql:mysql-connector-java")
    runtimeOnly("org.flywaydb:flyway-mysql")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:mysql")
    testImplementation("org.testcontainers:testcontainers")
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("io.micronaut.test:micronaut-test-junit5:3.4.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:{junitVersion}")

    implementation("io.micronaut:micronaut-validation")

    testImplementation("org.mockito:mockito-core")
    testImplementation('com.h2database:h2:1.3.148')

}


application {
    mainClass.set("com.eduardo.msa.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

micronaut {
    runtime("jetty")
    processing {
        incremental(true)
        annotations("com.eduardo.msa.*")
    }
}

sourceSets {
    main {
        java {
            srcDirs "$buildDir/generated/generated-sources/openapi"
        }
    }
}

openApiGenerate {
    generatorName = "micronaut"
    inputSpec = "$rootDir/api/spec.yaml".toString()
    outputDir = "$buildDir/generated".toString()
    apiPackage = "com.eduardo.msa.api"
    invokerPackage = "com.eduardo.msa.invoker"
    modelPackage = "com.eduardo.msa.model"
}

compileJava {
    dependsOn(tasks.openApiGenerate)
}

test {
    useJUnitPlatform()
}



